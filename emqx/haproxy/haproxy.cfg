#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    # local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2 

    # chroot      /usr/sbin/haproxy
    pidfile     /var/run/haproxy.pid
    # 如果系统u-limit 比指定数量小, haproxy将无法启动
    # maxconn     2000000
    user        root
    group       root
    daemon
    maxconnrate 2000000
    maxsessrate 2000000
    maxsslconn  2000000
    maxsslrate  2000000
    # 已经弃用
    # nbproc 4
    nbthread 4
    cpu-map 1 0
    cpu-map 2 1
    cpu-map 3 2
    cpu-map 4 3
    stats bind-process 4

    # turn on stats unix socket
    # stats socket /var/lib/haproxy/stats
    # stats socket /usr/sbin/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    option                  dontlognull
    option                  http-server-close
    option                  redispatch 
    retries                 3
    maxconn                 2000000
    timeout queue           1m
    ## 如果此时间比MQTT心跳时间短会导致设备频繁掉线
    timeout client          5m
    timeout connect         30s
    timeout server          5m

frontend emqx-external
    bind *:1883
    maxconn 30000000
    mode tcp
    default_backend emqx-external-backend

backend emqx-external-backend
    balance roundrobin
    # 100秒检查一次健康状态 不可用检查次数3 可用检查次数5 权重为1
    server emqx1 emqx1:1883 check inter 100s fall 5 rise 3 weight 1
    server emqx2 emqx2:1883 check inter 100s fall 5 rise 3 weight 1 
    server emqx3 emqx3:1883 check inter 100s fall 5 rise 3 weight 1 
    server emqx4 emqx4:1883 check inter 100s fall 5 rise 3 weight 1 

frontend emqx-internal
    bind *:11883
    maxconn 20000
    mode tcp
    default_backend emqx-internal-backend

backend emqx-internal-backend
    balance roundrobin
    # 100秒检查一次健康状态 不可用检查次数3 可用检查次数5 权重为1
    server emqx1 emqx1:11883 check inter 100s fall 5 rise 3 weight 1 
    server emqx2 emqx2:11883 check inter 100s fall 5 rise 3 weight 1 
    server emqx3 emqx3:11883 check inter 100s fall 5 rise 3 weight 1 
    server emqx4 emqx4:11883 check inter 100s fall 5 rise 3 weight 1 

frontend emqx-admin-front
    bind *:18083
    option forwardfor
    mode http
    default_backend emqx-admin-backend

backend emqx-admin-backend
    mode http
    balance roundrobin
    server emqx1 emqx1:18083 check inter 30s fall 5 rise 3 weight 1
    server emqx2 emqx2:18083 check inter 30s fall 5 rise 3 weight 1
    server emqx3 emqx3:18083 check inter 30s fall 5 rise 3 weight 1
    server emqx4 emqx4:18083 check inter 30s fall 5 rise 3 weight 1

listen admin_stats
    stats   enable
    bind    *:8080 
    mode    http 
    option  httplog
    log     global
    maxconn 10
    stats   refresh 30s
    stats   uri /admin
    stats   realm haproxy
    stats   auth admin:admin
    stats   hide-version
    stats   admin if TRUE
